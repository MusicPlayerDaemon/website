#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# Preprocessing: Generate yearly archives dynamically
preprocess do
  create_yearly_archives
end

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/stylesheet/' do
  # don’t filter or layout
end

compile 'news/atom' do
  filter :erb
end

compile '/google6715cb0d629b5cad/' do
end

compile '/robots/' do
end

compile '/news/*' do
  filter :erb
  filter :kramdown
  layout 'yearly_archive'
  layout 'default'
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb
    filter :kramdown
    layout 'default'
  end
end

route '/stylesheet/' do
  '/style.css'
end

route '/download/' do
  '/download.html'
end

route '/imprint/' do
  '/imprint.html'
end

route '/commercial/' do
  '/commercial.html'
end

route '/news/*' do
  item.identifier.to_s + '/index.html'
end

route '/posts/*' do
  y,m,d,slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/
    .match(item.identifier).captures

  "/news/#{y}/#{m}/#{slug}/index.html"
end

route 'news/atom' do
  '/atom.xml'
end

route '/google6715cb0d629b5cad/' do
  item.identifier.chop + '.html'
end

route '/robots/' do
  '/robots.txt'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
